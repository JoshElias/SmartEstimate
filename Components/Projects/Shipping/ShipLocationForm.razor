@inject IMapper Mapper
@inject ILogger<ShipLocationForm> Logger
@inject SmartOrderApi OrderApi
@namespace SO.Components.Projects
@inherits InputBase<ShipLocation>

<EditForm 
    @ref=@_editForm
    Model=@_shipLocationFormView
    FormName="ship-location-form"
    class="flex flex-col"
>
    <ObjectGraphDataAnnotationsValidator />
    
    <DmnSectionHeader 
        Title="New Shipping Location"
        TitleClass="!text-xl"
        SubmitButtonText=@((string.IsNullOrEmpty(Value.LocationName) ? "Add" : "Update"))
        CancelButtonText=@((string.IsNullOrEmpty(Value.LocationName) ? "Cancel" : "Delete"))
        IsLoading=@_isSubmitting
        OnSubmitClick=@OnSubmitClick
        OnCancelClick=@OnCancelClick
    />

    <div class="mt-6 grid grid-cols-1 gap-x-6 gap-y-4 sm:grid-cols-6">
        <div class="sm:col-span-3">
            <DmnInputText 
                Label="Location Name"
                @bind-Value=@_shipLocationFormView!.LocationName
            />
        </div>
        <div class="sm:col-span-3"></div>
        <div class="col-span-full">
            <h3 class="text-lg font-semibold">Select Contact</h3>
            <ContactForm />
        </div>
        <div class="col-span-full">
            <DmnInputText 
                Label="Street Address" 
                @bind-Value=@_shipLocationFormView!.DefaultAddress.Street
            />
        </div>
            <div class="col-span-full">
            <DmnInputText 
                Label="Address Line 2" 
                @bind-Value=@_shipLocationFormView!.DefaultAddress.StreetLine2
            />
        </div>
        <div class="sm:col-span-2 sm:col-start-1">
            <DmnInputText 
                Label="City" 
                @bind-Value=@_shipLocationFormView!.DefaultAddress.City
            />
        </div>
        <div class="sm:col-span-2">
            <DmnInputText 
                Label="Province" 
                @bind-Value=@_shipLocationFormView!.DefaultAddress.StateProvince
            />
        </div>
        <div class="sm:col-span-2">
            <DmnInputText 
                Label="Postal Code" 
                @bind-Value=@_shipLocationFormView!.DefaultAddress.PostalCode
            />
        </div>
    </div>
</EditForm>


@code {

    private  ShipLocationFormView? _shipLocationFormView;
    private EditForm _editForm = default!;
    private bool _isSubmitting = false;
    private bool _isAddingShipLocation = false;
    //private IQueryable<ShipLocation>? _shipLocations;

    @* public override async Task SetParametersAsync(ParameterView parameters) {
        await base.SetParametersAsync(parameters);
        Value ??= new ShipLocation("");
        _shipLocationFormView = Mapper.Map<ShipLocationFormView>(Value);
    } *@

    protected override void OnInitialized() {
        _shipLocationFormView = Mapper.Map<ShipLocationFormView>(Value);
        _shipLocationFormView.DefaultAddress ??= new AddressFormView("");
        _shipLocationFormView.DefaultContact ??= new ContactFormView("");
        @* _shipLocations = await OrderApi
            .ShipLocation
            .GetShipLocationsAsQueryable(); *@
    }
    
    protected override bool TryParseValueFromString(
        string? value, 
        out ShipLocation shipLocation,
        out string validationErrorMessage) {
        throw new NotImplementedException();
    }

    private async Task OnSubmitClick() {
        if (!_editForm!.EditContext!.Validate()) {
            return;
        }

        if(Value == null) {
            await AddLocation();
        } else {
            await UpdateLocation();
        }
    }

    private void OnCancelClick() {
    }

    private async Task AddLocation() {
        _isSubmitting = true;
        Logger.LogInformation($"Creating new project: {_shipLocationFormView!.LocationName}");
        Value = await OrderApi
            .ShipLocation
            .AddShipLocation(
                _shipLocationFormView.LocationName,
                _shipLocationFormView.DefaultAddress.Street,
                _shipLocationFormView.DefaultAddress.StreetLine2,
                _shipLocationFormView.DefaultAddress.City,
                _shipLocationFormView.DefaultAddress.StateProvince,
                _shipLocationFormView.DefaultAddress.PostalCode,
                _shipLocationFormView.DefaultAddress.AddressNotes
            );
        Logger.LogInformation($"Created new project: {_shipLocationFormView!.LocationName}");
        _isSubmitting = false;
    }
    
    private async Task UpdateLocation() {
        _isSubmitting = true;
        Logger.LogInformation($"Updating project: {_shipLocationFormView!.LocationName}");
        @* ShipLocationView updatedLocation = await OrderApi!
            .ShipLocation
            .UpdateShipLocation(ShipLocation!);
        Logger.LogInformation($"Updated project: {updatedLocation.LocationName}");
        await OnChange.InvokeAsync(updatedLocation); *@
        _isSubmitting = false;
    }
}
