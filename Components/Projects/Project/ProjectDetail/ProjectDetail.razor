@using SMART.Common.ProjectManagement
@page "/quotes/{projectLinkId}"
@rendermode @(new InteractiveServerRenderMode(prerender: false))
@attribute [StreamRendering(true)]
@namespace SO.Components.Projects

@inject ILogger<ProjectDetail> _logger
@inject SmartService SmartService

<div class="flex flex-col  h-full">
    @if(_isLoading) {
        <div class="flex flex-1 justify-center items-center">
            <Spinner Class="w-12 h-12"/>
        </div>
    } else {
        <ProjectDetailHeader Project=@_project/>
        <div class="flex flex-1">
            <ProjectDetailGroups Project=@_project />
        </div> 
    }
</div>


@code {
    [Parameter]
    public string? ProjectLinkId { get; set; }

    private Project? _project;
    private bool _isLoading = true;

    protected override async Task OnInitializedAsync() {
        //_logger.LogInformation("Load Project: {ProjectLinkId}", ProjectLinkId ?? "NULL");
        _project = await SmartService.GetClient()
            .Project
            .GetProjectById(ProjectLinkId!);
        _isLoading = false;
    }

    private async void OnStateChanged(object sender, EventArgs e) {
        _project = await SmartService.GetClient()
            .Project
            .GetProjectById(ProjectLinkId!);
        await InvokeAsync(StateHasChanged);
    }
}