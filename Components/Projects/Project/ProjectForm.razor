@page "/quotes/new"
@rendermode @(new InteractiveServerRenderMode(prerender: false))
@attribute [StreamRendering(true)]
@namespace SO.Components.Projects
@inject NavigationManager NavigationManager
@inject SmartService SmartService
@inject ILogger<ProjectForm> Logger

<div class="flex flex-col bg-slate-100"
    <BreadcrumbNav
        Options=@(new List<NavOptionProps> {
            new NavOptionProps { Path = "/quotes" },
            new NavOptionProps { Path = $"/quotes/add", Label = "New Quote" },
        }) 
    />

    <div class="
        container 
        flex flex-1 flex-col 
        my-12
    ">
        <EditForm 
            @ref=@_editForm
            Model=@_newProject     
            FormName="add-quote"
            OnValidSubmit=@AddQuote
        >
            <ObjectGraphDataAnnotationsValidator />
            <DmnSectionHeader 
                Title="Create Quote"
                TitleClass="text-4xl"
                Subtitle="Let's do some business"
                SubmitButtonText="Save"
                CancelButtonText="Clear"
                IsLoading=@_isSubmitting
                OnSubmitClick=@OnSubmitClick
                OnCancelClick=@OnCancelClick
            />
            <div 
                class="
                    w-full 
                    border-b 
                    border-stone-300
                    mt-2 mb-5
                "
            />
            <DmnInputText 
                Label="Quote Name" 
                LabelClass="text-lg font-semibold" 
                @bind-Value=@_newProject!.Name
            />
            <DmnInputText 
                Label="Sales Associate" 
                LabelClass="text-lg font-semibold" 
                @bind-Value=@_newProject!.LinkIDEmployeeSoldBy
            />
            <h2 class="
                text-lg font-semibold 
                leading-7 text-gray-900 
                mb-1
            ">
                Shipping Options
            </h2>

            <InputRadioGroup @bind-Value=@_newProject!.IsShipped>
                <div class="flex items-center">
                    <InputRadio Value=false class="dmn-input-radio" />Pickup
                    <div class="w-4" />
                    <InputRadio Value=true class="dmn-input-radio" />Delivery
                </div>
            </InputRadioGroup>
             @if(_newProject.IsShipped) {
                <div class="border-t border-gray-300 mb-8 mt-3"></div>
                <ShipLocationEditableComboBox 
                    @bind-Value=@_newProject.ProjectShipLocation
                    Project=_newProject
                />
             }
        </EditForm>
    </div>
</div>
    
@code {

    [SupplyParameterFromForm]
    private ProjectFormView? _newProject { get; set; }

    private EditForm _editForm = default!;
    private bool _isSubmitting = false;

    protected override void OnInitialized() {
        _newProject ??= new();
    }

    private async Task OnSubmitClick() {
        if (_editForm!.EditContext!.Validate()) {
            await AddQuote();
        } else {
            Logger.LogInformation("Validation failed!!!!");
        }
    }

    private void OnCancelClick() {
        _newProject = new();
        StateHasChanged();
    }

    private async Task AddQuote() {
        _isSubmitting = true;
        Logger.LogInformation($"Creating new project: {_newProject!.Name}");
        Project newProject = await SmartService!.GetClient()
            .Project
            .AddProject(_newProject.Name);
        if(!String.IsNullOrEmpty(_newProject.LinkIDEmployeeSoldBy)) {
            newProject.LinkIDEmployeeSoldBy = _newProject.LinkIDEmployeeSoldBy;
            await SmartService.GetClient()
                .Project
                .SaveProject(newProject);
        }
        // Add ShippingLocation
        // Add Contact

        Logger.LogInformation($"Created new project: {newProject.Name}");
        NavigationManager.NavigateTo("/quotes");
        _isSubmitting = false;
    }
}