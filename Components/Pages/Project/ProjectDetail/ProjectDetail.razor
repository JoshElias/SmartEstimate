@using SMART.Common.ProjectManagement

@page "/quotes/{projectLinkId}"

@namespace SmartEstimate.Pages

@inject ILogger<ProjectDetail> _logger
@inject ProjectStore _projectStore


<div class="flex flex-col h-full">
    @if(_isLoading) {
    <span>Loading</span>
    } else if(_project is null) {
        <span>Project not found</span>
    } else {
        <ProjectDetailHeader Project=@_project/>
        <div class="flex flex-1">
            <ProjectDetailGroups Project=@_project />
        </div> 
    }
</div>


@code {
    [Parameter]
    public string? ProjectLinkId { get; set; }

    private ProjectView? _project;
    private bool _isLoading = true;

    @* protected override void OnInitialized()
    { *@

    protected override async Task OnInitializedAsync()
    {
        //_logger.LogInformation("Load Project: {ProjectLinkId}", ProjectLinkId ?? "NULL");
        _project = await _projectStore!
            .ReadableStore
            .GetOne(p => p.LinkID == ProjectLinkId);
        _projectStore!.Storage.OnStateChanged += OnStateChanged!;
        _isLoading = false;
    }

    private async void OnStateChanged(object sender, EventArgs e) {
        _project = await _projectStore!
            .ReadableStore
            .GetOne(p => p.LinkID == ProjectLinkId);
        await InvokeAsync(StateHasChanged);
    }
}