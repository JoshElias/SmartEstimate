@using SmartEstimate.Animation
@using Daemon.Components

@page "/quotes/{quoteId:int}/rooms/{roomId:int}"

@inject QuoteStore _quoteStore

@namespace SmartEstimate.Pages

<div class="flex flex-col h-full">
  <QuoteDetailHeader QuoteId="@QuoteId" />
  <div class="border-t border-gray-300"></div>
   
   @if(IsLoading) {
        <Spinner Class="text-stone-400 dark:text-stone-400 fill-orange-600" />
    } else {
        <div class="md:flex md:items-center md:justify-between px-8 pt-6 pb-4">
            <div class="min-w-0 flex-1">
                <h2 class="
                    text-2xl font-bold
                    leading-7 text-gray-900 
                    sm:truncate sm:text-3xl 
                    sm:tracking-tight
                ">
                    @_room.Name
                </h2>
            </div>
            <div class="mt-4 flex md:ml-4 md:mt-0">
                <button type="button" class="ml-3 inline-flex items-center rounded-md bg-sky-500 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-sky-300 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-sky-500">Save</button>
            </div>
        </div>


        <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
            <div class="mx-auto max-w-3xl">
                <form class="bg-white shadow-sm ring-1 ring-gray-900/5 sm:rounded-xl md:col-span-2">
                    <div class="px-10 py-6">
                        <div class="flex flex-col max-w-2xl gap-y-4">
                            <label for="photo" class="block text-xl font-medium leading-6 mb-3 text-gray-900">Door Style</label>
                            <div class="mt-2 flex items-center gap-x-12">
                                <img src="/images/cherry.jpg?width=40&quality=80" class="w-20 rounded-full inline-block" />
                                <SelectMenu />                            
                            </div>
                 
                            <div class="border-t text-gray-500 my-1"></div>
  
                            <label for="photo" class="block text-xl font-medium leading-6 mb-3 text-gray-900">Finish</label>
                            <div class="mt-2 flex items-center gap-x-12">
                                <img src="/images/cherry.jpg?width=40&quality=80" class="w-20 rounded-full inline-block" />
                                <SelectMenu />                            
                            </div>
                    
                            <div class="border-t text-gray-500 my-1"></div>

                            <label for="photo" class="block text-xl font-medium leading-6 mb-3 text-gray-900">Interior Finish</label>
                            <div class="mt-2 flex items-center gap-x-12">
                                <img src="/images/cherry.jpg?width=40&quality=80" class="w-20 rounded-full inline-block" />
                                <SelectMenu />                            
                            </div>
                      
                            <div class="border-t text-gray-500 my-1"></div>
                          
                            <label for="photo" class="block text-xl font-medium leading-6 mb-3 text-gray-900">Drawer Hardware</label>
                            <div class="mt-2 flex items-center gap-x-12">
                                <img src="/images/cherry.jpg?width=40&quality=80" class="w-20 rounded-full inline-block" />
                                <SelectMenu />                            
                            </div>
                        </div>
                    </div>
                </form>
            

    
            </div>
        </div>
    }
</div>


@code {
    [Parameter]
    public int QuoteId { get; set; }

    [Parameter]
    public int RoomId { get; set; }

    private QuoteView _quote = new();
    private RoomView _room = new();
    private bool IsLoading = true;

    protected override async Task OnInitializedAsync()
    {
        _quote = await _quoteStore.ReadableStore.GetById(QuoteId);
        _room = _quote.Rooms.FirstOrDefault(r => r.Id == RoomId);
        IsLoading = false;
    }
}