@using static Microsoft.AspNetCore.Components.Web.RenderMode
@rendermode InteractiveServer
 
@using Microsoft.AspNetCore.Components.QuickGrid

@namespace SmartEstimate.Pages

@page "/"
@page "/quotes"
  

<div class="flex flex-col h-full">
    <Search />
    <div class="container flex flex-col flex-1 bg-gray-100 h-full py-10">
        @if(IsLoading) {
            <Spinner Class="text-stone-400 dark:text-stone-400 fill-orange-600" />
        } else if(!_quotes.Any()) {
            <span>No Quotes Available</span>
        } else {
            <ContentViewHeader 
                Title="Quotes"
                Description="A list of all your quotes including their name, sales associate and created and last updated dates"
                ButtonLabel="Add Quote"
                OnClick=AddQuote
            />
            <DataGridWrapper>
                <DataGrid Items=_quotes>
                    <PropertyColumn 
                        TGridItem=QuoteView
                        TProp=string
                        Title="Name"
                        Property=@(q => q.Name)
                        Sortable="true" 
                    />
                    <PropertyColumn 
                        TGridItem=QuoteView 
                        TProp=QuoteStatus
                        Title="Status"
                        Property=@(q => q.Status)
                        Sortable=true
                    />
                    <PropertyColumn 
                        TGridItem=QuoteView 
                        TProp=string 
                        Title="Sales Associate"
                        Property=@(q => q.SalesAssociate)
                        Sortable=true
                    />
                    <PropertyColumn 
                        TGridItem=QuoteView 
                        TProp=DateTime 
                        Title="Last Updated"
                        Property=@(q => q.UpdatedAt)
                        Format="HH:mm tt MMMM d, yyyy"
                        Sortable=true 
                    />
                    <TemplateColumn 
                        TGridItem=QuoteView 
                        Class="flex gap-x-2 justify-end"
                    >
                        <button class="w-[22px] cursor-pointer" onclick=@(() => DeleteQuote(context.Id))>
                            <TrashIcon Props=@(new IconProps() 
                                { 
                                    Color = new TailwindColor("gray", 400),
                                    HoverColor = new TailwindColor("rose", 500),
                                    Transition = "transition ease-in duration-200"
                                }) 
                            />
                        </button>         
                    </TemplateColumn>
                </DataGrid>
            </DataGridWrapper>
        }
   </div>
</div>
