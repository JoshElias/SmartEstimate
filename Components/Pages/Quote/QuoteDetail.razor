@using SmartEstimate.Animation

@namespace SmartEstimate.Pages

@page "/quotes/{quoteId:int}"

@inject QuoteStore _quoteStore


<header>
  <QuoteDetailHeader QuoteId=QuoteId/>

  <!-- Heading -->
  <div class="flex flex-col items-start justify-between gap-x-8 gap-y-4 bg-stone-600 px-4 py-4 sm:flex-row sm:items-center sm:px-6 lg:px-8">
    <div>
      <div class="flex items-center gap-x-3">
        <div class="flex-none rounded-full bg-green-400/10 p-1 text-green-400">
          <div class="h-2 w-2 rounded-full bg-current"></div>
        </div>
        <h1 class="flex gap-x-3 text-base leading-7">
          <span class="font-semibold text-lg text-gray-200">Reference Number</span>
        </h1>
      </div>
      <p class="mt-2 text-sm leading-6 text-gray-300">Sales Associate Name</p>
    </div>
    <div class="
      order-first flex-none 
      rounded-full bg-green-200 
      px-2 py-1 text-sm 
      font-medium text-green-700 
      ring-1 ring-inset ring-green-700 
      sm:order-none
    ">
      Approved
    </div>
  </div>

  <!-- Stats -->
  <div class="grid grid-cols-1 bg-stone-600 sm:grid-cols-2 lg:grid-cols-4">
    <div class="border-t border-stone-500 py-6 px-4 sm:px-6 lg:px-8">
      <p class="text-sm font-medium leading-6 text-gray-300">Total</p>
      <p class="mt-2 flex items-baseline gap-x-2">
        <span class="text-4xl font-semibold tracking-tight text-white">$2000</span>
      </p>
    </div>
    <div class="border-t border-stone-500 py-6 px-4 sm:px-6 lg:px-8 sm:border-l">
      <p class="text-sm font-medium leading-6 text-gray-300">Subtotal</p>
      <p class="mt-2 flex items-baseline gap-x-2">
        <span class="text-4xl font-semibold tracking-tight text-white">$1600</span>
      </p>
    </div>
    <div class="border-t border-stone-500 py-6 px-4 sm:px-6 lg:px-8 lg:border-l">
      <p class="text-sm font-medium leading-6 text-gray-300">Discount (%)</p>
      <p class="mt-2 flex items-baseline gap-x-2">
        <span class="text-4xl font-semibold tracking-tight text-white">$300</span>
      </p>
    </div>
    <div class="border-t border-stone-500 py-6 px-4 sm:px-6 lg:px-8 sm:border-l">
      <p class="text-sm font-medium leading-6 text-gray-300">Shipping</p>
      <p class="mt-2 flex items-baseline gap-x-2">
        <span class="text-4xl font-semibold tracking-tight text-white">$250</span>
      </p>
    </div>
  </div>
</header>


<div class="container bg-gray-100 h-full py-10 m-0">
    
    @if(IsLoading) {
        <Spinner Class="text-stone-400 dark:text-stone-400 fill-orange-600" />
    } else if(!_roomsQueryable.Any()) {
        <span>No Quotes Available</span>
    } else {
        <ContentViewHeader 
            Title="Rooms"
            Description="We heard you like rooms"
            ButtonLabel="Add Room"
        />
        <DataGridWrapper>
            <DataGrid Items=_roomsQueryable>
                <PropertyColumn 
                    TGridItem=RoomView
                    TProp=string
                    Title="Name"
                    Property=@(r => r.Name)
                    Sortable="true" 
                />
                <PropertyColumn 
                    TGridItem=RoomView 
                    TProp=string
                    Title="Door Style"
                    Property=@(r => r.DoorStyle.Name)
                    Sortable=true
                />
                <PropertyColumn 
                    TGridItem=RoomView 
                    TProp=string 
                    Title="Finish"
                    Property=@(r => r.Finish.Name)
                    Sortable=true
                />
                <PropertyColumn 
                    TGridItem=RoomView 
                    TProp=DateTime 
                    Title="Last Updated"
                    Property=@(q => q.UpdatedAt)
                    Format="HH:mm tt MMMM d, yyyy"
                    Sortable=true 
                />
                <TemplateColumn 
                    TGridItem=RoomView 
                    Class="flex gap-x-2 justify-end"
                >
                    <NavLink href="#">
                        <EditIcon Class="
                            w-[22px]
                            cursor-pointer 
                            stroke-gray-400
                            hover:stroke-sky-500 
                            duration-300 
                            ease-in-out" 
                        />
                    </NavLink>
                    <button>
                        <TrashIcon Class="
                            w-[22px]
                            cursor-pointer 
                            stroke-gray-400
                            hover:stroke-rose-500 
                            duration-300 
                            ease-in-out" 
                        />
                    </button>         
                </TemplateColumn>
            </DataGrid>
        </DataGridWrapper>
    }
</div>





@code {

  private bool IsLoading { get; set; } = true;

    [Parameter]
    public int QuoteId { get; set; }

    private QuoteView _quote = new();
    private IQueryable<RoomView> _roomsQueryable = new List<RoomView>().AsQueryable();

    protected override async Task OnInitializedAsync()
    {
        _quote = await _quoteStore.ReadableStore.GetById(QuoteId);
        _roomsQueryable = _quote.Rooms.AsQueryable();
        IsLoading = false;
    }
}