@using static Microsoft.AspNetCore.Components.Web.RenderMode
@rendermode InteractiveServer

@using Microsoft.AspNetCore.Components.Forms
@using SMART.Common.CompanyManagement
@using SmartEstimate.Models

@inject SmartStore SmartStore
@inject ILogger<ShippingOptions> Logger

@namespace SmartEstimate.Shared.Components


<ShippingOptions />

@if(_project!.IsShipped) {
  <div class="border-t border-gray-300 mb-4"></div>
  <h1>Location ComboBox</h1>
  //<span>Locations Count: @ShipLocations!.Count()</span>
  @if(_project!.ProjectShipLocation is not null) {
    <SEAddressView ShipLocation=@_project!.ProjectShipLocation />
  }
}




@code {

  private ProjectView? _project { get; set; }

  [CascadingParameter]
  public EditContext? EditContext { get; set; }

  private IList<ShipLocation>? ShipLocations;
      
  protected override async Task OnInitializedAsync()
  {
    _project = EditContext!.Model as ProjectView;

    //IList<ShipLocation> locationCollection = await SmartStore.GetShipLocations();
    //ShipLocations = locationCollection.ToList();

    EditContext.OnFieldChanged += OnFieldChanged;
  }

  private void OnFieldChanged(object? sender, FieldChangedEventArgs e)
  {
    StateHasChanged();
  }
}